{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","setPopout","closePopout","title","before","photo_200","src","description","city","first_name","last_name","size","mode","style","margin","padding","type","placeholder","onClick","actionsLayout","actions","autoclose","action","onClose","document","getElementById","value","marginTop","href","target","App","useState","activePanel","setActivePanel","setUser","popout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render"],"mappings":"spBA8GeA,G,OA5FF,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,GAAQC,GAA6B,EAAjCC,GAAiC,EAA7BD,aAAaE,EAAgB,EAAhBA,UAC7BC,EAAc,WAClBD,EAAU,OA2BZ,OACE,kBAAC,IAAD,CAAOH,GAAIA,GACT,kBAAC,IAAD,2GACCC,GACC,kBAAC,IAAD,CAAOI,MAAM,oCACX,kBAAC,IAAD,CACEC,OACEL,EAAYM,UACV,kBAAC,IAAD,CAAQC,IAAKP,EAAYM,YACvB,KAENE,YACER,EAAYS,MAAQT,EAAYS,KAAKL,MACjCJ,EAAYS,KAAKL,MACjB,IATR,UAYMJ,EAAYU,WAZlB,YAYgCV,EAAYW,aAKhD,kBAAC,IAAD,CAAOP,MAAM,mBACX,kBAAC,IAAD,CAAMQ,KAAK,IAAIC,KAAK,SAASC,MAAO,CAAEC,OAAQ,GAAIC,QAAS,KACzD,kBAAC,IAAD,CACEC,KAAK,SACLlB,GAAG,cACHmB,YAAY,2FAEd,kBAAC,IAAD,CACEC,QAtDQ,WAChBjB,EACE,kBAAC,IAAD,CACEkB,cAAc,WACdC,QAAS,CACP,CACEjB,MAAO,yDACPkB,WAAW,EACXT,KAAM,cACNU,OAAQ,kBAAMpB,IAEhB,CACEC,MAAO,eACPkB,WAAW,EACXT,KAAM,WAGVW,QAASrB,GAET,2EAAcsB,SAASC,eAAe,eAAeC,MAArD,UAoCIf,KAAK,KACLC,KAAK,WACLC,MAAO,CAAEc,UAAW,KAJtB,kEAWJ,kBAAC,IAAD,eACU,IACR,kBAAC,IAAD,CAAMC,KAAK,4BAA4BC,OAAO,UAA9C,kBCjDOC,EAhCH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAEThC,EAFS,KAEImC,EAFJ,OAGYH,mBAAS,kBAAC,IAAD,CAAepB,KAAK,WAHzC,mBAGTwB,EAHS,KAGDlC,EAHC,KAKhBmC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEEN,EAAQM,GACRvC,EAAU,MAHZ,4CARc,sBACdqC,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAU1B,EAAmB,EAAnBA,KAAM2B,EAAa,EAAbA,KAClC,GAAa,yBAAT3B,EAAiC,CACnC,IAAM4B,EAAkBpB,SAASqB,gBAAgB,UACjDD,EAAgBlB,MAAQiB,EAAKG,OAASH,EAAKG,OAAS,eACpDtB,SAASuB,KAAKC,WAAWC,aAAaL,OAL5B,mCAadM,KACC,IAMH,OACE,kBAAC,IAAD,CAAMlB,YAAaA,EAAaG,OAAQA,GACtC,kBAAC,EAAD,CAAMrC,GAAG,OAAOC,YAAaA,EAAaC,GANnC,SAACmD,GACVlB,EAAekB,EAAEC,cAAcC,QAAQC,KAKarD,UAAWA,MC3BnEqC,IAAOC,KAAK,gBAEZgB,IAASC,OAAO,kBAAC,EAAD,MAAShC,SAASC,eAAe,W","file":"static/js/main.875133e9.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport {\n  Group,\n  Card,\n  Input,\n  Footer,\n  Link,\n  Button,\n  Alert,\n} from \"@vkontakte/vkui\";\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\n\nimport \"./Home.css\";\n\nconst Home = ({ id, go, fetchedUser, setPopout }) => {\n  const closePopout = () => {\n    setPopout(null);\n  };\n\n  const getHeight = () => {\n    setPopout(\n      <Alert\n        actionsLayout=\"vertical\"\n        actions={[\n          {\n            title: \"Поделится\",\n            autoclose: true,\n            mode: \"destructive\",\n            action: () => closePopout,\n          },\n          {\n            title: \"Ок\",\n            autoclose: true,\n            mode: \"cancel\",\n          },\n        ]}\n        onClose={closePopout}\n      >\n        <h2>Ваш рост {document.getElementById(\"user_height\").value} cm</h2>\n      </Alert>\n    );\n  };\n\n  return (\n    <Panel id={id}>\n      <PanelHeader>Определи свой рост</PanelHeader>\n      {fetchedUser && (\n        <Group title=\"User Data Fetched with VK Bridge\">\n          <Cell\n            before={\n              fetchedUser.photo_200 ? (\n                <Avatar src={fetchedUser.photo_200} />\n              ) : null\n            }\n            description={\n              fetchedUser.city && fetchedUser.city.title\n                ? fetchedUser.city.title\n                : \"\"\n            }\n          >\n            {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n          </Cell>\n        </Group>\n      )}\n\n      <Group title=\"Get Your Height\">\n        <Card size=\"l\" mode=\"shadow\" style={{ margin: 15, padding: 10 }}>\n          <Input\n            type=\"number\"\n            id=\"user_height\"\n            placeholder=\"Введите ваш рост\"\n          />\n          <Button\n            onClick={getHeight}\n            size=\"xl\"\n            mode=\"commerce\"\n            style={{ marginTop: 50 }}\n          >\n            Определить\n          </Button>\n        </Card>\n      </Group>\n\n      <Footer>\n        Made by{\" \"}\n        <Link href=\"https://vk.com/xop_enotov\" target=\"_blank\">\n          XOP EHOTOB\n        </Link>\n      </Footer>\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} setPopout={setPopout} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}