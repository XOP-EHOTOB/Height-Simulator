{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","title","before","photo_200","src","description","city","first_name","last_name","size","mode","style","margin","padding","type","placeholder","marginTop","href","target","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"goBA6DeA,EArDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAX,OACX,kBAAC,IAAD,CAAOD,GAAIA,GACT,kBAAC,IAAD,2GACCC,GACC,kBAAC,IAAD,CAAOE,MAAM,oCACX,kBAAC,IAAD,CACEC,OACEH,EAAYI,UACV,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YACvB,KAENE,YACEN,EAAYO,MAAQP,EAAYO,KAAKL,MACjCF,EAAYO,KAAKL,MACjB,IATR,UAYMF,EAAYQ,WAZlB,YAYgCR,EAAYS,aAKhD,kBAAC,IAAD,CAAOP,MAAM,mBACX,kBAAC,IAAD,CAAMQ,KAAK,IAAIC,KAAK,SAASC,MAAO,CAAEC,OAAQ,GAAIC,QAAS,KACzD,kBAAC,IAAD,CAAOC,KAAK,SAAShB,GAAG,cAAciB,YAAY,2FAClD,kBAAC,IAAD,CAAQN,KAAK,KAAKC,KAAK,WAAWC,MAAO,CAAEK,UAAW,KAAtD,kEAMJ,kBAAC,IAAD,eACU,IACR,kBAAC,IAAD,CAAMC,KAAK,4BAA4BC,OAAO,UAA9C,iBCDSC,EAhCH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAETrB,EAFS,KAEIwB,EAFJ,OAGYH,mBAAS,kBAAC,IAAD,CAAeX,KAAK,WAHzC,mBAGTe,EAHS,KAGDC,EAHC,KAKhBC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEEP,EAAQO,GACRL,EAAU,MAHZ,4CARc,sBACdG,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAUlB,EAAmB,EAAnBA,KAAMmB,EAAa,EAAbA,KAClC,GAAa,yBAATnB,EAAiC,CACnC,IAAMoB,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAL5B,mCAadQ,KACC,IAMH,OACE,kBAAC,IAAD,CAAMrB,YAAaA,EAAaG,OAAQA,GACtC,kBAAC,EAAD,CAAM1B,GAAG,OAAOC,YAAaA,EAAaC,GANnC,SAAC2C,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,SCtB3ClB,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.20ee7ae8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport { Group, Card, Input, Footer, Link, Button } from \"@vkontakte/vkui\";\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Определи свой рост</PanelHeader>\n    {fetchedUser && (\n      <Group title=\"User Data Fetched with VK Bridge\">\n        <Cell\n          before={\n            fetchedUser.photo_200 ? (\n              <Avatar src={fetchedUser.photo_200} />\n            ) : null\n          }\n          description={\n            fetchedUser.city && fetchedUser.city.title\n              ? fetchedUser.city.title\n              : \"\"\n          }\n        >\n          {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n        </Cell>\n      </Group>\n    )}\n\n    <Group title=\"Get Your Height\">\n      <Card size=\"l\" mode=\"shadow\" style={{ margin: 15, padding: 10 }}>\n        <Input type=\"number\" id=\"user_height\" placeholder=\"Введите ваш рост\" />\n        <Button size=\"xl\" mode=\"commerce\" style={{ marginTop: 50 }}>\n          Определить\n        </Button>\n      </Card>\n    </Group>\n\n    <Footer>\n      Made by{\" \"}\n      <Link href=\"https://vk.com/xop_enotov\" target=\"_blank\">\n        XOP EHOTOB\n      </Link>\n    </Footer>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}